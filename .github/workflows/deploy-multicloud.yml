name: Multi-Cloud Parallel Deploy to GKE and AKS

on:
  push:
    branches:
      - master

env:
  IMAGE_TAG: commit-${{ github.sha }}
  IMAGE_NAME: django-app
  GCP_SA_EMAIL: github-ci-cd@nci-research-project.iam.gserviceaccount.com
  GCP_PROJECT_ID: nci-research-project
  GCP_REGION: europe-west1
  AZURE_RESOURCE_GROUP: nci-azure-rg
  AZURE_AKS_CLUSTER: nci-aks-cluster
  AZURE_ACR_NAME: nciregistryacr
  GCP_LOG_BUCKET: nci-deployment-logs
  AZURE_LOG_CONTAINER: deployment-logs

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.tag }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Image Tag
        id: set-tag
        run: echo "tag=commit-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_KEY }}

      - name: Azure ACR Login
        run: az acr login --name ${{ env.AZURE_ACR_NAME }}

      - name: Build and Push Docker Images
        run: |
          docker build -t europe-west1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/django-repo/${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.tag }} \
                       -t ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.tag }} .
          docker push europe-west1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/django-repo/${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.tag }}
          docker push ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.tag }}

  deploy-gcp:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Install GKE Auth Plugin
        run: gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials nci-research-cluster \
            --region ${{ env.GCP_REGION }} \
            --project ${{ env.GCP_PROJECT_ID }}

      - name: Deploy to GKE
        id: deploy
        run: |
          START_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          IMAGE=europe-west1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/django-repo/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }}
          sed -e "s|PLACEHOLDER_IMAGE|$IMAGE|" -e "s|{{PVC_NAME}}|django-media-pvc|" k8s/deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment django-app
          END_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          DURATION=$(($(date -d "$END_TIME" +%s) - $(date -d "$START_TIME" +%s)))
          FILE_NAME="deploy-log-gcp-${{ github.run_id }}-${{ github.run_number }}.csv"
          echo "cloud,start_time,end_time,duration_seconds,status" > $FILE_NAME
          echo "GCP,$START_TIME,$END_TIME,$DURATION,success" >> $FILE_NAME
          echo "ðŸ“¦ Uploading log to GCS..."
          gsutil cp $FILE_NAME gs://${{ env.GCP_LOG_BUCKET }}/$FILE_NAME

  deploy-azure:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_KEY }}

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ env.AZURE_AKS_CLUSTER }}

      - name: Deploy to AKS
        id: deploy
        run: |
          START_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          IMAGE=${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }}
          sed -e "s|PLACEHOLDER_IMAGE|$IMAGE|" -e "s|{{PVC_NAME}}|django-media-pvc-rwx|" k8s/deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment django-app
          END_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          DURATION=$(($(date -d "$END_TIME" +%s) - $(date -d "$START_TIME" +%s)))
          FILE_NAME="deploy-log-azure-${{ github.run_id }}-${{ github.run_number }}.csv"
          echo "cloud,start_time,end_time,duration_seconds,status" > $FILE_NAME
          echo "Azure,$START_TIME,$END_TIME,$DURATION,success" >> $FILE_NAME
          echo "ðŸ“¦ Uploading log to Azure Blob..."
          az storage blob upload \
            --account-name ${{ env.AZURE_ACR_NAME }} \
            --container-name ${{ env.AZURE_LOG_CONTAINER }} \
            --name $FILE_NAME \
            --file $FILE_NAME \
            --auth-mode key \
            --account-key ${{ secrets.AZURE_STORAGE_KEY }}
